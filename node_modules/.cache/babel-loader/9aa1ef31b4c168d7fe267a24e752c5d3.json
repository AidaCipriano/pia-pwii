{"ast":null,"code":"var _jsxFileName = \"A:\\\\Users\\\\cesar\\\\Downloads\\\\POI_Tims\\\\POI-PROYECTOFINAL\\\\POI-PROYECTOFINAL\\\\src\\\\Components\\\\MessageGroup.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigation from '../Components/NavigationLayout';\nimport Badge from 'react-bootstrap/Badge';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\nimport { collection, query, where, getDocs, serverTimestamp, onSnapshot, doc, updateDoc, Timestamp } from \"firebase/firestore\";\nimport Search from '../Components/Search';\nimport { db, storage } from '../firebase';\nimport { arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { useRef } from 'react'; //Bootstrap\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { useContext } from 'react';\nimport { ChatConext } from '../Context/ChatContext';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport { AuthConext } from '../Context/AuthContext';\nimport Image from 'react-bootstrap/Image';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageGroup = _ref => {\n  _s();\n\n  let {\n    message\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthConext);\n  const {\n    data\n  } = useContext(ChatConext);\n\n  const descifrar = texto => {\n    const str = texto;\n    var info2 = CryptoJS.AES.decrypt(texto, \"poi\");\n    var textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);\n\n    if (textoDescifrado) {\n      return textoDescifrado;\n    } else {\n      return texto;\n    } //const decrypted = CryptoJS.AES.decrypt(texto);\n    //if (decrypted) {\n    //    try {\n    //        console.log(decrypted);\n    //        const str = decrypted.toString(CryptoJS.enc.Utf8, 'secret');\n    //        if (str.length > 0) {\n    //            return str;\n    //        } else {\n    //            return 'error 1';\n    //        } \n    //    } catch (e) {\n    //        return 'error 2';\n    //    }\n    //}\n    //return 'error 3';\n\n  };\n\n  const ref = useRef();\n  useEffect(() => {\n    var _ref$current;\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      gap: 3,\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"left\",\n        src: message.photoURL,\n        className: \"rounded-circle img\",\n        width: 32,\n        height: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fw-bold\",\n        children: message.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ms-5 me-auto ml-5\",\n      children: [message.text && descifrar(message.text), message.img && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.img,\n        alt: \"\",\n        width: \"100px\",\n        className: \"fluid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageGroup, \"9uELNj1C6SlzVSDaQLsQuENKLwo=\");\n\n_c = MessageGroup;\nexport default MessageGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageGroup\");","map":{"version":3,"names":["Navigation","Badge","ListGroup","Card","Stack","Button","Form","Container","collection","query","where","getDocs","serverTimestamp","onSnapshot","doc","updateDoc","Timestamp","Search","db","storage","arrayUnion","arrayRemove","getDownloadURL","ref","uploadBytesResumable","useRef","InputGroup","useContext","ChatConext","useState","useEffect","v4","uuid","AuthConext","Image","CryptoJS","MessageGroup","message","currentUser","data","descifrar","texto","str","info2","AES","decrypt","textoDescifrado","bytes","toString","enc","Utf8","current","scrollIntoView","behavior","photoURL","displayName","text","img"],"sources":["A:/Users/cesar/Downloads/POI_Tims/POI-PROYECTOFINAL/POI-PROYECTOFINAL/src/Components/MessageGroup.jsx"],"sourcesContent":["import Navigation from '../Components/NavigationLayout';\nimport Badge from 'react-bootstrap/Badge';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\nimport { collection, query, where, getDocs, serverTimestamp, onSnapshot, doc, updateDoc, Timestamp } from \"firebase/firestore\";\nimport Search from '../Components/Search';\nimport { db, storage } from '../firebase';\nimport { arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { useRef } from 'react';\n\n//Bootstrap\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { useContext } from 'react';\nimport { ChatConext } from '../Context/ChatContext';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport { AuthConext } from '../Context/AuthContext';\nimport Image from 'react-bootstrap/Image'\nimport CryptoJS from 'crypto-js';\n\nexport const MessageGroup = ({ message }) => {\n    const { currentUser } = useContext(AuthConext);\n    const { data } = useContext(ChatConext);\n\n    const descifrar = (texto) => {\n\n        const str = texto;\n        var info2 = CryptoJS.AES.decrypt(texto, \"poi\");\n        var textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);\n        \n        if (textoDescifrado) {\n            return textoDescifrado;\n        } else {\n            return texto;\n        }\n\n       //const decrypted = CryptoJS.AES.decrypt(texto);\n       //if (decrypted) {\n       //    try {\n       //        console.log(decrypted);\n       //        const str = decrypted.toString(CryptoJS.enc.Utf8, 'secret');\n       //        if (str.length > 0) {\n       //            return str;\n       //        } else {\n       //            return 'error 1';\n       //        } \n       //    } catch (e) {\n       //        return 'error 2';\n       //    }\n       //}\n       //return 'error 3';\n    }\n\n\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, [message]);\n\n    return (\n        \n        <ListGroup.Item>\n            \n            <Stack direction=\"horizontal\" gap={3}>\n                <Card.Img variant=\"left\" src={message.photoURL} className=\"rounded-circle img\" width={32}\n                    height={30} />\n                <div className=\"fw-bold\">{message.displayName}</div>\n                \n            </Stack>\n            \n            <div className=\"ms-5 me-auto ml-5\">\n            \n                {message.text && descifrar(message.text)}\n                {message.img && <img src={message.img} alt=\"\" width=\"100px\" className='fluid' />}\n            </div>\n        </ListGroup.Item>\n    );\n};\n\nexport default MessageGroup"],"mappings":"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"},"metadata":{},"sourceType":"module"}