{"ast":null,"code":"var _jsxFileName = \"A:\\\\Users\\\\cesar\\\\Downloads\\\\POI_Tims\\\\POI-PROYECTOFINAL\\\\POI-PROYECTOFINAL\\\\src\\\\Components\\\\ChatT.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Cam from \"../img/cam.png\";\nimport Add from \"../img/add.png\";\nimport More from \"../img/more.png\";\nimport Messages from \"./MessagesT\";\nimport Input from \"./InputT\";\nimport { ChatConext } from \"../Context/ChatContext\";\nimport \"../stilos.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  var _data$user;\n\n  //Manejar estado de encriptacion\n  const [encriptar, setEncriptar] = useState(false);\n\n  const toggleEncrypt = () => {\n    setEncriptar(!encriptar);\n    console.log(encriptar);\n  }; //Funciones para encriptar los mensajes\n\n\n  const cifrar = texto => {\n    console.log(\"AQUIIII\");\n\n    if (encriptar) {\n      var textoCifrado = CryptoJS.AES.encrypt(texto, \"poi\").toString();\n      console.log(\"se encripto\");\n      return textoCifrado;\n    } else {\n      console.log(\"No se encripto\");\n      return texto;\n    }\n  };\n\n  const {\n    data\n  } = useContext(ChatConext);\n  const [err, setErr] = useState(false); //const [cifrado, setCifrado] = useState(false);\n\n  const [idGroup, setIdGroup] = useState(\"null\");\n  const [messages, setMessages] = useState([]);\n  const [messagesGroup, setMessagesGroup] = useState([]);\n  const [chatIsGroup, setIsGroup] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthConext);\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), doc => {\n      doc.exists() && setMessages(doc.data().messages);\n    });\n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  useEffect(() => {\n    const unSubGroup = onSnapshot(doc(db, \"chats\", idGroup), doc => {\n      doc.exists() && setMessagesGroup(doc.data().messages);\n      console.log(idGroup);\n    });\n    return () => {\n      unSubGroup();\n    };\n  }, [idGroup]); //DIVISION PARA EL ENVIO DE MENSAJES\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const handleSendMessageLocation = async () => {\n    navigator.geolocation.getCurrentPosition(showPosition, showError);\n\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    }\n\n    getLocation();\n\n    function showPosition(position) {\n      //var str=\"Longitude: \"+ position.coords.longitude+\"Latitude:\"+ position.coords.latitude\n      //var str=\"Longitude: \"+ position.coords.longitude+\"Latitude:\"+ position.coords.latitude\n      var str = \"https://www.google.com/maps/place/\" + position.coords.longitude + \",\" + -position.coords.latitude;\n      document.getElementById(\"mensaje\").value = str;\n    }\n\n    function showError(error) {\n      console.log('getCurrentPosition returned error', error);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (chatIsGroup) {\n      console.log(\"es grupo\");\n\n      if (img) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = uploadBytesResumable(storageRef, img);\n        uploadTask.on(error => {//TODO:Handle Error\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", idGroup), {\n              messages: arrayUnion({\n                id: uuid(),\n                text: cifrar(text),\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n                displayName: currentUser.displayName,\n                photoURL: currentUser.photoURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, \"chats\", idGroup), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: cifrar(text),\n            senderId: currentUser.uid,\n            date: Timestamp.now(),\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          })\n        });\n      }\n    } else {\n      if (img) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = uploadBytesResumable(storageRef, img);\n        uploadTask.on(error => {//TODO:Handle Error\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text: cifrar(text),\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, \"chats\", data.chatId), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: cifrar(text),\n            senderId: currentUser.uid,\n            date: Timestamp.now()\n          })\n        });\n      }\n\n      await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n      await updateDoc(doc(db, \"userChats\", data.user.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n    }\n\n    setIsGroup(false);\n    setIdGroup(\"null\");\n    setMessagesGroup([]);\n    console.log(\"ya lo puse falso\");\n    setText(\"\");\n    setImg(null);\n  }; // DIVISION PARA TRAER MSG DE UN GRUPO\n\n\n  const handlerGroup = async g => {\n    try {\n      console.log(\"chats/\" + g);\n      const docRef = doc(db, \"chats\", g);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        console.log(\"Document data:\", docSnap.data());\n        setIsGroup(true);\n        setIdGroup(g);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        setIsGroup(false);\n        setIdGroup(\"null\");\n        setMessagesGroup([]);\n      }\n    } catch (err) {}\n  };\n\n  const handlerDefaultUser = () => {\n    console.log(\"yo\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatT\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatInfoT\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatIconsT\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Cam,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Add,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: More,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"E5m4SujiHIlBByGi23HsDINbtU8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","Cam","Add","More","Messages","Input","ChatConext","Chat","encriptar","setEncriptar","useState","toggleEncrypt","console","log","cifrar","texto","textoCifrado","CryptoJS","AES","encrypt","toString","data","err","setErr","idGroup","setIdGroup","messages","setMessages","messagesGroup","setMessagesGroup","chatIsGroup","setIsGroup","currentUser","AuthConext","useEffect","unSub","onSnapshot","doc","db","chatId","exists","unSubGroup","text","setText","img","setImg","handleSendMessageLocation","navigator","geolocation","getCurrentPosition","showPosition","showError","getLocation","alert","position","str","coords","longitude","latitude","document","getElementById","value","error","handleSendMessage","storageRef","ref","storage","uuid","uploadTask","uploadBytesResumable","on","getDownloadURL","snapshot","then","downloadURL","updateDoc","arrayUnion","id","senderId","uid","date","Timestamp","now","displayName","photoURL","serverTimestamp","user","handlerGroup","g","docRef","docSnap","getDoc","handlerDefaultUser"],"sources":["A:/Users/cesar/Downloads/POI_Tims/POI-PROYECTOFINAL/POI-PROYECTOFINAL/src/Components/ChatT.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Cam from \"../img/cam.png\";\nimport Add from \"../img/add.png\";\nimport More from \"../img/more.png\";\nimport Messages from \"./MessagesT\";\nimport Input from \"./InputT\";\nimport { ChatConext } from \"../Context/ChatContext\";\nimport \"../stilos.scss\";\n\nconst Chat = () => {\n\n\n  //Manejar estado de encriptacion\n  const [encriptar, setEncriptar] = useState(false);\n\n  const toggleEncrypt = () => {\n      setEncriptar(!encriptar)\n      console.log(encriptar)\n  }\n\n  //Funciones para encriptar los mensajes\n  const cifrar = (texto) => {\n      console.log(\"AQUIIII\")\n      if (encriptar) {\n          var textoCifrado = CryptoJS.AES.encrypt(texto, \"poi\").toString();\n          console.log(\"se encripto\")\n          return textoCifrado;\n      } else {\n          console.log(\"No se encripto\")\n          return texto;\n      }\n  }\n\n \n\n  const { data } = useContext(ChatConext);\n  const [err, setErr] = useState(false);\n  //const [cifrado, setCifrado] = useState(false);\n\n  const [idGroup, setIdGroup] = useState(\"null\");\n  const [messages, setMessages] = useState([]);\n  const [messagesGroup, setMessagesGroup] = useState([]);\n\n  const [chatIsGroup, setIsGroup] = useState(false);\n\n  const { currentUser } = useContext(AuthConext);\n\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), (doc) => {\n      doc.exists() && setMessages(doc.data().messages)\n    })\n\n\n\n\n\n    return () => {\n\n        unSub()\n    }\n\n\n\n    }, [data.chatId]);\n\n    useEffect(() => {\n\n        const unSubGroup = onSnapshot(doc(db, \"chats\", idGroup), (doc) => {\n            doc.exists() && setMessagesGroup(doc.data().messages)\n            console.log(idGroup)\n        })\n\n        return () => {\n            unSubGroup()\n        }\n\n\n\n    }, [idGroup]);\n\n\n\n\n    //DIVISION PARA EL ENVIO DE MENSAJES\n    const [text, setText] = useState(\"\");\n    const [img, setImg] = useState(null);\n\n    const handleSendMessageLocation = async () => {\n        navigator.geolocation.getCurrentPosition(showPosition, showError);\n        \n        function getLocation(){\n            if (navigator.geolocation){\n              navigator.geolocation.getCurrentPosition(showPosition);\n              }else{\n                alert(\"Geolocation is not supported by this browser.\");\n              }\n            }\n          getLocation()\n          function showPosition(position) {\n                //var str=\"Longitude: \"+ position.coords.longitude+\"Latitude:\"+ position.coords.latitude\n                //var str=\"Longitude: \"+ position.coords.longitude+\"Latitude:\"+ position.coords.latitude\n                var str=\"https://www.google.com/maps/place/\" + position.coords.longitude + \",\" +- position.coords.latitude\n\n\n                document.getElementById(\"mensaje\").value=str\n            }\n            function showError( error ) {\n                console.log( 'getCurrentPosition returned error', error);\n            }\n    }\n\n    const handleSendMessage = async () => {\n\n        if (chatIsGroup) {\n            console.log(\"es grupo\")\n            if (img) {\n                const storageRef = ref(storage, uuid());\n\n                const uploadTask = uploadBytesResumable(storageRef, img);\n\n                uploadTask.on(\n                    (error) => {\n                        //TODO:Handle Error\n                    },\n                    () => {\n                        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                            await updateDoc(doc(db, \"chats\", idGroup), {\n                                messages: arrayUnion({\n                                    id: uuid(),\n                                    text: cifrar(text),\n                                    senderId: currentUser.uid,\n                                    date: Timestamp.now(),\n                                    img: downloadURL,\n                                    displayName: currentUser.displayName,\n                                    photoURL: currentUser.photoURL,\n                                }),\n                            });\n                        });\n                    }\n                );\n\n            } else {\n                await updateDoc(doc(db, \"chats\", idGroup), {\n                    messages: arrayUnion({\n                        id: uuid(),\n                        text: cifrar(text),\n                        senderId: currentUser.uid,\n                        date: Timestamp.now(),\n                        displayName: currentUser.displayName,\n                        photoURL: currentUser.photoURL,\n                    })\n                })\n            }\n        } else {\n            if (img) {\n                const storageRef = ref(storage, uuid());\n\n                const uploadTask = uploadBytesResumable(storageRef, img);\n\n                uploadTask.on(\n                    (error) => {\n                        //TODO:Handle Error\n                    },\n                    () => {\n                        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                            await updateDoc(doc(db, \"chats\", data.chatId), {\n                                messages: arrayUnion({\n                                    id: uuid(),\n                                    text: cifrar(text),\n                                    senderId: currentUser.uid,\n                                    date: Timestamp.now(),\n                                    img: downloadURL,\n                                }),\n                            });\n                        });\n                    }\n                );\n\n            } else {\n                await updateDoc(doc(db, \"chats\", data.chatId), {\n                    messages: arrayUnion({\n                        id: uuid(),\n                        text: cifrar(text),\n                        senderId: currentUser.uid,\n                        date: Timestamp.now(),\n                    })\n                })\n            }\n\n            await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n                [data.chatId + \".lastMessage\"]: {\n                    text,\n                },\n                [data.chatId + \".date\"]: serverTimestamp(),\n            });\n\n            await updateDoc(doc(db, \"userChats\", data.user.uid), {\n                [data.chatId + \".lastMessage\"]: {\n                    text,\n                },\n                [data.chatId + \".date\"]: serverTimestamp(),\n            });\n        }\n\n\n        setIsGroup(false);\n        setIdGroup(\"null\")\n        setMessagesGroup([])\n        console.log(\"ya lo puse falso\")\n        setText(\"\");\n        setImg(null);\n    }\n\n\n    // DIVISION PARA TRAER MSG DE UN GRUPO\n    const handlerGroup = async (g) => {\n\n        try {\n            console.log(\"chats/\" + g)\n            const docRef = doc(db, \"chats\", g);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n                console.log(\"Document data:\", docSnap.data());\n                setIsGroup(true);\n                setIdGroup(g);\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n                setIsGroup(false);\n                setIdGroup(\"null\");\n                setMessagesGroup([])\n            }\n\n        } catch (err) {\n\n        }\n    }\n\n    const handlerDefaultUser = () => {\n\n        console.log(\"yo\")\n\n    }\n\n  return (\n    <div className=\"chatT\">\n      <div className=\"chatInfoT\">\n        <span>{data.user?.displayName}</span>\n        <div className=\"chatIconsT\">\n          <img src={Cam} alt=\"\" />\n          <img src={Add} alt=\"\" />\n          <img src={More} alt=\"\" />\n        </div>\n      </div>\n      <Messages />\n      <Input/>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}