{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\POI_Tims\\\\POI-PROYECTOFINAL\\\\POI-PROYECTOFINAL\\\\src\\\\Components\\\\MessagesT.jsx\",\n    _s = $RefreshSig$();\n\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ChatConext } from \"../Context/ChatContext\";\nimport { db } from \"../firebase\";\nimport Message from \"./MessageT\";\nimport MessageGroup from \"./MessageGroup\";\nimport \"../stilos.scss\";\nimport \"./MessagesT.css\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Navigation from '../Components/NavigationLayout'; //Bootstrap\n\nimport { v4 as uuid } from \"uuid\";\nimport { AuthConext } from '../Context/AuthContext';\nimport CryptoJS from 'crypto-js';\nimport { collection, query, where, getDocs, serverTimestamp, updateDoc, Timestamp } from \"firebase/firestore\";\nimport { arrayUnion, arrayRemove, getDoc } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { storage } from '../firebase';\nimport { useRef } from 'react';\nimport Cam from \"../img/cam.png\";\nimport Img from \"../img/img.png\";\nimport Send from \"../img/send.png\";\nimport Map from \"../img/mapa.png\";\nimport Attach from \"../img/attach.png\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  var _data$user;\n\n  const {\n    data\n  } = useContext(ChatConext);\n  const [idGroup, setIdGroup] = useState(\"null\");\n  const [param, setParam] = useState(\"null\");\n  const [messages, setMessages] = useState([]);\n  const [messagesGroup, setMessagesGroup] = useState([]);\n  const [chatIsGroup, setIsGroup] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthConext);\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), doc => {\n      doc.exists() && setMessages(doc.data().messages);\n    });\n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  useEffect(() => {\n    const unSubGroup = onSnapshot(doc(db, \"chats\", idGroup), doc => {\n      doc.exists() && setMessagesGroup(doc.data().messages);\n    });\n    return () => {\n      unSubGroup();\n    };\n  }, [idGroup]); // DIVISION PARA TRAER MSG DE UN GRUPO\n\n  const handlerGroup = async g => {\n    try {\n      console.log(\"chats/\" + g);\n      const docRef = doc(db, \"chats\", g);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setIsGroup(true);\n        setIdGroup(g);\n      } else {\n        setIsGroup(false);\n        setIdGroup(\"null\");\n        setMessagesGroup([]);\n      }\n    } catch (err) {// console.log(\"no ps f\")\n    }\n  }; //DIVISION PARA EL ENVIO DE MENSAJES\n\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const handleSendMessageLocation = async () => {\n    navigator.geolocation.getCurrentPosition(showPosition, showError);\n\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    }\n\n    getLocation();\n\n    function showPosition(position) {\n      var str = \"https://www.google.com/maps/place/\" + position.coords.latitude + \",\" + position.coords.longitude;\n      document.getElementById(\"mensaje\").value = str;\n    }\n\n    function showError(error) {\n      console.log('getCurrentPosition returned error', error);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (chatIsGroup) {\n      //console.log(\"es grupo\")\n      if (img) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = uploadBytesResumable(storageRef, img);\n        uploadTask.on(error => {//TODO:Handle Error\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", idGroup), {\n              messages: arrayUnion({\n                id: uuid(),\n                text: text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n                displayName: currentUser.displayName,\n                photoURL: currentUser.photoURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, \"chats\", idGroup), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: text,\n            senderId: currentUser.uid,\n            date: Timestamp.now(),\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          })\n        });\n      }\n    } else {\n      if (img) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = uploadBytesResumable(storageRef, img);\n        uploadTask.on(error => {//TODO:Handle Error\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text: text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                displayName: currentUser.displayName,\n                img: downloadURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, \"chats\", data.chatId), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: text,\n            senderId: currentUser.uid,\n            date: Timestamp.now(),\n            displayName: currentUser.displayName\n          })\n        });\n      }\n\n      await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n      await updateDoc(doc(db, \"userChats\", data.user.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n    }\n\n    setIsGroup(false);\n    setIdGroup(\"null\");\n    setMessagesGroup([]); //console.log(\"ya lo puse falso\")\n    //setText(\"\");\n    //setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handlerGroup((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.displayName),\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagesT\",\n      children: [messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n        message: m\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)), messagesGroup.map(m => /*#__PURE__*/_jsxDEV(MessageGroup, {\n        message: m\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputT\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"mensaje\",\n        className: \"me-auto\",\n        placeholder: \"Mensaje a enviar...\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendT\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSendMessageLocation,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Map,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 73\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          src: Img,\n          type: \"file\",\n          onChange: e => setImg(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3030/e0f3826b-dc09-4d2b-9b33-eda560cfb835\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Cam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Send,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 64\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"mg1dEZjbHfn076lI2dSiSBiH5xM=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useEffect","useState","ChatConext","db","Message","MessageGroup","Button","Form","Navigation","v4","uuid","AuthConext","CryptoJS","collection","query","where","getDocs","serverTimestamp","updateDoc","Timestamp","arrayUnion","arrayRemove","getDoc","getDownloadURL","ref","uploadBytesResumable","storage","useRef","Cam","Img","Send","Map","Attach","useCallback","Messages","data","idGroup","setIdGroup","param","setParam","messages","setMessages","messagesGroup","setMessagesGroup","chatIsGroup","setIsGroup","currentUser","unSub","chatId","exists","unSubGroup","handlerGroup","g","console","log","docRef","docSnap","err","text","setText","img","setImg","handleSendMessageLocation","navigator","geolocation","getCurrentPosition","showPosition","showError","getLocation","alert","position","str","coords","latitude","longitude","document","getElementById","value","error","handleSendMessage","storageRef","uploadTask","on","snapshot","then","downloadURL","id","senderId","uid","date","now","displayName","photoURL","user","map","m","e","target","files"],"sources":["C:/Users/User/Downloads/POI_Tims/POI-PROYECTOFINAL/POI-PROYECTOFINAL/src/Components/MessagesT.jsx"],"sourcesContent":["import { doc, onSnapshot } from \"firebase/firestore\";\nimport React, { useContext, useEffect, useState} from \"react\";\nimport { ChatConext } from \"../Context/ChatContext\";\nimport { db } from \"../firebase\";\nimport Message from \"./MessageT\";\nimport MessageGroup from \"./MessageGroup\";\nimport \"../stilos.scss\";\nimport \"./MessagesT.css\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Navigation from '../Components/NavigationLayout';\n\n//Bootstrap\nimport { v4 as uuid } from \"uuid\";\nimport { AuthConext } from '../Context/AuthContext';\nimport CryptoJS from 'crypto-js';\n\nimport { collection, query, where, getDocs, serverTimestamp, updateDoc, Timestamp } from \"firebase/firestore\";\nimport { arrayUnion, arrayRemove, getDoc } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport {storage } from '../firebase';\nimport { useRef } from 'react';\nimport Cam from \"../img/cam.png\";\nimport Img from \"../img/img.png\";\nimport Send from \"../img/send.png\"\nimport Map from \"../img/mapa.png\"\nimport Attach from \"../img/attach.png\";\nimport { useCallback } from \"react\";\n\n\n\nconst Messages = () => {\n\n\n\n  const { data } = useContext(ChatConext);\n\n\n  const [idGroup, setIdGroup] = useState(\"null\");\n  const [param, setParam] = useState(\"null\");\n  const [messages, setMessages] = useState([]);\n  const [messagesGroup, setMessagesGroup] = useState([]);\n\n  const [chatIsGroup, setIsGroup] = useState(false);\n\n  const { currentUser } = useContext(AuthConext);\n\n  useEffect(() => {\n      const unSub = onSnapshot(doc(db, \"chats\", data.chatId), (doc) => {\n          doc.exists() && setMessages(doc.data().messages)\n      })\n      return () => {\n\n          unSub()\n      }\n  }, [data.chatId]);\n\n  useEffect(() => {\n\n  \n    const unSubGroup = onSnapshot(doc(db, \"chats\", idGroup), (doc) => {\n        doc.exists() && setMessagesGroup(doc.data().messages)\n\n    })\n    return () => {\n        unSubGroup()\n    }\n  }, [idGroup]);\n  \n  // DIVISION PARA TRAER MSG DE UN GRUPO\n  const handlerGroup = async (g) => {\n    try {\n      console.log(\"chats/\" + g)\n      const docRef = doc(db, \"chats\", g);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setIsGroup(true);\n        setIdGroup(g);\n      } else {\n       \n        setIsGroup(false);\n        setIdGroup(\"null\");\n        setMessagesGroup([])\n      }\n    } catch (err) {\n     // console.log(\"no ps f\")\n    }\n    \n  }\n\n\n\n  //DIVISION PARA EL ENVIO DE MENSAJES\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const handleSendMessageLocation = async () => {\n      navigator.geolocation.getCurrentPosition(showPosition, showError);\n      \n      function getLocation(){\n          if (navigator.geolocation){\n             navigator.geolocation.getCurrentPosition(showPosition);\n            }else{\n               alert(\"Geolocation is not supported by this browser.\");\n            }\n          \n        }\n           \n        getLocation()\n        \n        function showPosition(position) {\n              \n           \n \n              \n            var str=\"https://www.google.com/maps/place/\" + position.coords.latitude + \",\" + position.coords.longitude\n\n            document.getElementById(\"mensaje\").value=str\n        }\n\n          function showError( error ) {\n            console.log( 'getCurrentPosition returned error', error);\n          }\n  \n        }\n  \n        const handleSendMessage = async () => {\n\n        if (chatIsGroup) {\n        //console.log(\"es grupo\")\n        if (img) {\n            const storageRef = ref(storage, uuid());\n\n            const uploadTask = uploadBytesResumable(storageRef, img);\n\n            uploadTask.on(\n                (error) => {\n                    //TODO:Handle Error\n                },\n                () => {\n                    getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                        await updateDoc(doc(db, \"chats\", idGroup), {\n                            messages: arrayUnion({\n                                id: uuid(),\n                               \n                                text: text,\n                                senderId: currentUser.uid,\n                                date: Timestamp.now(),\n                                img: downloadURL,\n                                displayName: currentUser.displayName,\n                                photoURL: currentUser.photoURL,\n                            }),\n                        });\n                    });\n                }\n            );\n\n        } else {\n            await updateDoc(doc(db, \"chats\", idGroup), {\n                messages: arrayUnion({\n                    id: uuid(),\n                \n                    text: text,\n                    senderId: currentUser.uid,\n                    date: Timestamp.now(),\n                    displayName: currentUser.displayName,\n                    photoURL: currentUser.photoURL,\n                })\n            })\n        }\n    } else {\n        if (img) {\n            const storageRef = ref(storage, uuid());\n\n            const uploadTask = uploadBytesResumable(storageRef, img);\n\n            uploadTask.on(\n                (error) => {\n                    //TODO:Handle Error\n                },\n                () => {\n                    getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                        await updateDoc(doc(db, \"chats\", data.chatId), {\n                            messages: arrayUnion({\n                                id: uuid(),\n                              \n                                text: text,\n                                senderId: currentUser.uid,\n                                date: Timestamp.now(),\n                                displayName: currentUser.displayName,\n                                img: downloadURL,\n                            }),\n                        });\n                    });\n                }\n            );\n\n        } else {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n                messages: arrayUnion({\n                    id: uuid(),\n                    \n                    text: text,\n                    senderId: currentUser.uid,\n                    date: Timestamp.now(),\n                    displayName: currentUser.displayName,\n                })\n            })\n        }\n\n        \n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n            [data.chatId + \".lastMessage\"]: {\n                text,\n            },\n            [data.chatId + \".date\"]: serverTimestamp(),\n        });\n\n        await updateDoc(doc(db, \"userChats\", data.user.uid), {\n            [data.chatId + \".lastMessage\"]: {\n                text,\n            },\n            [data.chatId + \".date\"]: serverTimestamp(),\n        });\n    }\n\n\n    setIsGroup(false);\n    setIdGroup(\"null\")\n    setMessagesGroup([])\n    //console.log(\"ya lo puse falso\")\n    //setText(\"\");\n    //setImg(null);\n};\n\n  \n\n\n\n  return (\n    <section>\n      { /*onChange={(g) => handlerGroup(data.user?.displayName, g)}*/}\n      \n      {<div onClick={handlerGroup(data.user?.displayName)}> </div>}\n      <div className=\"messagesT\">\n      \n\n        {messages.map((m) => (\n          <Message message={m} key={m.id}  />\n          \n        ))}\n        {messagesGroup.map((m) => (\n          <MessageGroup message={m} key={m.id}  />\n        ))}\n      </div>\n   \n      <div className=\"inputT\">\n        <Form.Control id=\"mensaje\" className=\"me-auto\" placeholder=\"Mensaje a enviar...\" onChange={e => setText(e.target.value)} />\n        \n        <div className=\"sendT\"> \n\n          <div className=\"vr\" />\n          <Button variant=\"primary\" onClick={handleSendMessageLocation}><img src={Map} alt=\"\" /> </Button>\n\n          \n          <Form.Control  src={Img} type=\"file\" onChange={e => setImg(e.target.files[0])}>\n            \n         </Form.Control>\n       \n          <a href=\"http://localhost:3030/e0f3826b-dc09-4d2b-9b33-eda560cfb835\"><img src={Cam} /></a>\n          <Button variant=\"danger\" onClick={handleSendMessage}><img src={Send} alt=\"\" /> </Button>\n          \n        </div>\n      </div>\n  </section>\n\n  );\n};\n\nexport default Messages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}